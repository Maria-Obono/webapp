name: Run packer

on:
  push:
    branches:
        - 'main'
jobs:
  packer_build:
    
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: packer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          AWS_SSH_CERTIFICATE: ${{ secrets.AWS_SSH_CERTIFICATE }}
          aws-region: us-east-1
          http_server_source: 'demo.mariaobono.me'
          http_server_port: '443'


      - name: Test AWS credentials
        run: |
          aws --version
          aws sts get-caller-identity

      # Initialize Packer templates
      - name: Initialize Packer Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: init

      # # validate templates
      # - name: Validate Template
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: validate
      #     arguments: -syntax-only
      #     target: aws-linux.pkr.hcl

      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build 
          arguments: "-color=false -on-error=abort"
          target: aws-packer.pkr.hcl
        env:
          PACKER_LOG: 1

      
      - name:  instance refresh
        run: |
          ami_id=$(aws ec2 describe-images --owners self --query 'sort_by(Images, &CreationDate)[-1].ImageId' --output text)
          echo "AMI ID: $ami_id"
          lt_id=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names loadbalancer-asg --query 'AutoScalingGroups[0].LaunchTemplate.LaunchTemplateId' --output text)
          aws ec2 create-launch-template-version --launch-template-id $lt_id --version-description version2 --source-version 1 --launch-template-data "ImageId=$ami_id"
          group_name=loadbalancer-asg
          lt_ver=$(aws ec2 describe-launch-template-versions --launch-template-id $lt_id --query 'sort_by(LaunchTemplateVersions, &VersionNumber)[-1].VersionNumber' --output text)
          aws autoscaling update-auto-scaling-group --auto-scaling-group-name $group_name --launch-template LaunchTemplateId=$lt_id,Version=$lt_ver --output text
          aws autoscaling start-instance-refresh --auto-scaling-group-name $group_name --strategy Rolling --preferences "MinHealthyPercentage=75,InstanceWarmup=300" --output text