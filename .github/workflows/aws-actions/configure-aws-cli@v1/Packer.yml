name: Run packer

on:
  push:
    branches:
        - 'main'
jobs:
  packer_build:
    
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    name: packer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Initialize Packer templates
      - name: Initialize Packer Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: init

      # # validate templates
      # - name: Validate Template
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: validate
      #     arguments: -syntax-only
      #     target: aws-linux.pkr.hcl

      # build artifact
      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build 
          arguments: "-color=false -on-error=abort"
          target: aws-packer.pkr.hcl
        env:
          PACKER_LOG: 1

      
      - name: Get AMI ID
        id: ami_id
        run: |
         ami_id=$(cat manifest.json | jq -r '.builds[-1].artifact_id' | cut -d':' -f2)
         echo "::set-output name=ami_id::$ami_id"

      - name: Create Launch Template Version
        uses: aws-actions/configure-aws-cli@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
          aws-region: us-east-1
          
          id: lt_version
          run: |
           lt_version=$(aws ec2 create-launch-template-version --launch-template-name "${{secrets.LAUNCH_TEMPLATE_NAME}}" --source-version ${{ steps.ami_id.outputs.ami_id }} --region us-east-1 --output text --query 'LaunchTemplateVersion.VersionNumber')
           echo "::set-output name=lt_version::$lt_version"

      - name: Initiate Instance Refresh
        uses: aws-actions/configure-aws-cli@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
          aws-region: us-east-1
          

          run: |
           aws autoscaling start-instance-refresh --auto-scaling-group-name "${{secrets.AUTO_SCALING_GROUP_NAME}}" --strategy Rolling --preferences "{
           \"MinHealthyPercentage\": 50,
           \"InstanceWarmup\": 300
           }" --launch-template "{\"LaunchTemplateName\":\"${{secrets.LAUNCH_TEMPLATE_NAME}}\",\"Version\":\"${{ steps.lt_version.outputs.lt_version }}\"}" --region us-east-1